GRAMMAR = {
    "non-terminals": [
        "SENT-E",
        "SENT-T",
        "SENT-P",
        "SENT-Q",
        "SENT-A",
        "SENT-I",
        "EXPR-E",
        "EXPR-T",
        "EXPR-F",
    ],
    "terminals": [
        "int",
        "int-lit",
        "id",

        "parenthesis::(",
        "parenthesis::)",
        "brace::{",
        "brace::}",

        "arithmetic-op::+",
        "arithmetic-op::*",
        "assignment-op",
        "semicolon",
    ],
    "start": "SENT-E",
    "derivations": [
        ("SENT-E", "int id parenthesis::( parenthesis::) SENT-T"),
        ("SENT-T", "brace::{ brace::}"),
        ("SENT-T", "brace::{ SENT-P brace::}"),
        ("SENT-P", "SENT-P SENT-Q"),
        ("SENT-P", "SENT-Q"),
        ("SENT-Q", "SENT-A"),
        ("SENT-Q", "SENT-I"),
        ("SENT-A", "id assignment-op EXPR-E semicolon"),
        ("SENT-I", "int id assignment-op EXPR-E semicolon"),
        ("EXPR-E", "EXPR-E arithmetic-op::+ EXPR-T"),
        ("EXPR-E", "EXPR-T"),
        ("EXPR-T", "EXPR-T arithmetic-op::* EXPR-F"),
        ("EXPR-T", "EXPR-F"),
        ("EXPR-F", "parenthesis::( EXPR-E parenthesis::)"),
        ("EXPR-F", "id"),
        ("EXPR-F", "int-lit"),
    ]
}
