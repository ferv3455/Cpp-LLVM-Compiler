macro                   #include <iostream>

macro                   #include <cstdio>

using                   using
namespace               namespace
id                      std
semicolon               ;
int                     int
id                      input_number
bracket                 [
int-lit                 100
bracket                 ]
semicolon               ;
int                     int
id                      count
assignment-op           =
int-lit                 0
semicolon               ;
int                     int
id                      main
parenthesis             (
parenthesis             )
brace                   {
int                     int
id                      temp_number
assignment-op           =
int-lit                 0
semicolon               ;
id                      cin
bit-op                  >>
id                      count
semicolon               ;
for                     for
parenthesis             (
int                     int
id                      i
assignment-op           =
int-lit                 0
semicolon               ;
id                      i
relational-op           <
id                      count
semicolon               ;
id                      i
increment-op            ++
parenthesis             )
brace                   {
id                      cin
bit-op                  >>
id                      input_number
bracket                 [
id                      i
bracket                 ]
semicolon               ;
brace                   }
for                     for
parenthesis             (
int                     int
id                      i
assignment-op           =
int-lit                 0
semicolon               ;
id                      i
relational-op           <
id                      count
semicolon               ;
id                      i
increment-op            ++
parenthesis             )
brace                   {
for                     for
parenthesis             (
int                     int
id                      j
assignment-op           =
int-lit                 0
semicolon               ;
id                      j
relational-op           <
id                      count
arithmetic-op           -
id                      i
arithmetic-op           -
int-lit                 1
semicolon               ;
id                      j
increment-op            ++
parenthesis             )
brace                   {
if                      if
parenthesis             (
id                      input_number
bracket                 [
id                      j
bracket                 ]
relational-op           >
id                      input_number
bracket                 [
id                      j
arithmetic-op           +
int-lit                 1
bracket                 ]
parenthesis             )
brace                   {
int                     int
id                      temp
assignment-op           =
id                      input_number
bracket                 [
id                      j
bracket                 ]
semicolon               ;
id                      input_number
bracket                 [
id                      j
bracket                 ]
assignment-op           =
id                      input_number
bracket                 [
id                      j
arithmetic-op           +
int-lit                 1
bracket                 ]
semicolon               ;
id                      input_number
bracket                 [
id                      j
arithmetic-op           +
int-lit                 1
bracket                 ]
assignment-op           =
id                      temp
semicolon               ;
brace                   }
brace                   }
brace                   }
for                     for
parenthesis             (
int                     int
id                      i
assignment-op           =
int-lit                 0
semicolon               ;
id                      i
relational-op           <
id                      count
semicolon               ;
id                      i
increment-op            ++
parenthesis             )
brace                   {
id                      cout
bit-op                  <<
id                      input_number
bracket                 [
id                      i
bracket                 ]
bit-op                  <<
str-lit                 " "
semicolon               ;
brace                   }
id                      cout
bit-op                  <<
id                      endl
semicolon               ;
return                  return
int-lit                 0
semicolon               ;
brace                   }
